### ðŸŽ¯ WORKFLOW COMPLET - ScÃ©nario de A Ã  Z
### Ce fichier exÃ©cute un scÃ©nario complet d'utilisation du systÃ¨me

@apiUrl = http://localhost:5001/backend-demo-1/us-central1/api
@authUrl = http://localhost:9099/identitytoolkit.googleapis.com/v1

### ============================================
### Ã‰TAPE 1: SE CONNECTER EN TANT QU'ADMIN
### ============================================

# @name loginAdmin
POST {{authUrl}}/accounts:signInWithPassword?key=anything
Content-Type: application/json

{
  "email": "admin@school.com",
  "password": "admin123",
  "returnSecureToken": true
}

@adminToken = {{loginAdmin.response.body.idToken}}

### ============================================
### Ã‰TAPE 2: ADMIN CRÃ‰E UN PROFESSEUR
### ============================================

# @name createProf
POST {{apiUrl}}/v1/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "email": "marie.leclerc@school.com",
  "password": "prof456",
  "role": "professor",
  "firstName": "Marie",
  "lastName": "Leclerc"
}

@profUid = {{createProf.response.body.data.uid}}

### ============================================
### Ã‰TAPE 3: ADMIN CRÃ‰E DEUX Ã‰TUDIANTS
### ============================================

# @name createStudent1
POST {{apiUrl}}/v1/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "email": "paul.dupont@school.com",
  "password": "student456",
  "role": "student",
  "firstName": "Paul",
  "lastName": "Dupont"
}

@student1Uid = {{createStudent1.response.body.data.uid}}

###

# @name createStudent2
POST {{apiUrl}}/v1/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "email": "emma.rousseau@school.com",
  "password": "student456",
  "role": "student",
  "firstName": "Emma",
  "lastName": "Rousseau"
}

@student2Uid = {{createStudent2.response.body.data.uid}}

### VÃ©rifier les utilisateurs crÃ©Ã©s
GET {{apiUrl}}/v1/users
Authorization: Bearer {{adminToken}}

### ============================================
### Ã‰TAPE 4: PROFESSEUR SE CONNECTE ET CRÃ‰E UN COURS
### ============================================

# @name loginProf
POST {{authUrl}}/accounts:signInWithPassword?key=anything
Content-Type: application/json

{
  "email": "marie.leclerc@school.com",
  "password": "prof456",
  "returnSecureToken": true
}

@profToken = {{loginProf.response.body.idToken}}

### Professeur crÃ©e un cours
# @name createCourse
POST {{apiUrl}}/v1/courses
Authorization: Bearer {{profToken}}
Content-Type: application/json

{
  "title": "DÃ©veloppement Web Full Stack",
  "description": "CrÃ©er des applications web modernes avec React et Node.js",
  "maxStudents": 15
}

@courseId = {{createCourse.response.body.data.id}}

### Professeur vÃ©rifie ses cours
GET {{apiUrl}}/v1/courses/my
Authorization: Bearer {{profToken}}

### ============================================
### Ã‰TAPE 5: Ã‰TUDIANT 1 S'INSCRIT AU COURS
### ============================================

# @name loginStudent1
POST {{authUrl}}/accounts:signInWithPassword?key=anything
Content-Type: application/json

{
  "email": "paul.dupont@school.com",
  "password": "student456",
  "returnSecureToken": true
}

@student1Token = {{loginStudent1.response.body.idToken}}

### Ã‰tudiant 1 consulte les cours disponibles
GET {{apiUrl}}/v1/courses
Authorization: Bearer {{student1Token}}

### Ã‰tudiant 1 s'inscrit au cours
# @name enrollment1
POST {{apiUrl}}/v1/enrollments
Authorization: Bearer {{student1Token}}
Content-Type: application/json

{
  "courseId": "{{courseId}}"
}

@enrollment1Id = {{enrollment1.response.body.data.id}}

### Ã‰tudiant 1 crÃ©e une note
# @name note1
POST {{apiUrl}}/v1/notes
Authorization: Bearer {{student1Token}}
Content-Type: application/json

{
  "title": "Premier jour de cours",
  "content": "Introduction au dÃ©veloppement web. Stack technologique: HTML, CSS, JavaScript, React, Node.js"
}

### ============================================
### Ã‰TAPE 6: Ã‰TUDIANT 2 S'INSCRIT AUSSI
### ============================================

# @name loginStudent2
POST {{authUrl}}/accounts:signInWithPassword?key=anything
Content-Type: application/json

{
  "email": "emma.rousseau@school.com",
  "password": "student456",
  "returnSecureToken": true
}

@student2Token = {{loginStudent2.response.body.idToken}}

### Ã‰tudiant 2 s'inscrit au mÃªme cours
# @name enrollment2
POST {{apiUrl}}/v1/enrollments
Authorization: Bearer {{student2Token}}
Content-Type: application/json

{
  "courseId": "{{courseId}}"
}

### Ã‰tudiant 2 vÃ©rifie ses inscriptions
GET {{apiUrl}}/v1/enrollments/my
Authorization: Bearer {{student2Token}}

### ============================================
### Ã‰TAPE 7: PROFESSEUR CONSULTE LES INSCRIPTIONS
### ============================================

GET {{apiUrl}}/v1/courses/{{courseId}}/enrollments
Authorization: Bearer {{profToken}}

### Professeur consulte les dÃ©tails du cours
GET {{apiUrl}}/v1/courses/{{courseId}}
Authorization: Bearer {{profToken}}

### ============================================
### Ã‰TAPE 8: PROFESSEUR MODIFIE LE COURS
### ============================================

PUT {{apiUrl}}/v1/courses/{{courseId}}
Authorization: Bearer {{profToken}}
Content-Type: application/json

{
  "description": "CrÃ©er des applications web modernes avec React, Node.js et MongoDB. Projet final inclus.",
  "maxStudents": 20
}

### ============================================
### Ã‰TAPE 9: Ã‰TUDIANT 1 ANNULE SON INSCRIPTION
### ============================================

DELETE {{apiUrl}}/v1/enrollments/{{enrollment1Id}}
Authorization: Bearer {{student1Token}}

### VÃ©rifier que l'inscription est annulÃ©e
GET {{apiUrl}}/v1/enrollments/my
Authorization: Bearer {{student1Token}}

### ============================================
### Ã‰TAPE 10: ADMIN CONSULTE TOUT LE SYSTÃˆME
### ============================================

### Tous les utilisateurs
GET {{apiUrl}}/v1/users
Authorization: Bearer {{adminToken}}

### Tous les cours
GET {{apiUrl}}/v1/courses
Authorization: Bearer {{adminToken}}

### ============================================
### ðŸ“Š RÃ‰SUMÃ‰ DU SCÃ‰NARIO
### ============================================
### âœ… Admin crÃ©Ã© et connectÃ©
### âœ… 1 Professeur crÃ©Ã© (Marie Leclerc)
### âœ… 2 Ã‰tudiants crÃ©Ã©s (Paul, Emma)
### âœ… 1 Cours crÃ©Ã© (DÃ©veloppement Web Full Stack)
### âœ… 2 Inscriptions effectuÃ©es
### âœ… 1 Annulation d'inscription
### âœ… Notes crÃ©Ã©es par les Ã©tudiants
### âœ… Professeur consulte les inscriptions
### âœ… Admin supervise le systÃ¨me

